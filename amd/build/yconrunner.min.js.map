{"version":3,"file":"yconrunner.min.js","sources":["../src/yconrunner.js"],"sourcesContent":["define(['jquery', 'core/log', 'qtype_yconrunner/ace_wrapper'], function ($, log, acePromise) {\n    return {\n        init: function (params) {\n            $(document).ready(function () {\n                var attemptid = params.attemptid; // Получение attemptid из переданных параметров\n\n                var questions = document.querySelectorAll('.que');\n\n                questions.forEach(function(question) {\n                    // Проверяем, есть ли в этом вопросе кнопка с текстом \"Проверить\"\n                    var verifyButton = question.querySelector('button');\n                    if (verifyButton && verifyButton.textContent.trim() === 'Проверить') {\n                        // Если есть, ищем кнопку \"Check\" в том же вопросе и скрываем её\n                        var checkButton = question.querySelector('.im-controls');\n                        if (checkButton) {\n                            checkButton.style.display = 'none';\n                        }\n                    }\n                });\n\n                // Загрузка данных из API\n                fetch(`http://185.4.67.138:3002/api/contests/${params.contestid}/problems/${params.submissionid}/statement`)\n                    .then(response => response.text())\n                    .then(data => {\n                        log.debug('Received problem statement:', data);\n                        $('#question-text').html(data);\n                    })\n                    .catch(error => log.error('Ошибка при получении описания проблемы', error));\n\n                // Использование ACE из нашего обёрточного модуля\n                acePromise.then(function (ace) {\n                    log.debug('ACE loaded successfully');\n                    var editor = ace.edit(\"editor\");\n                    editor.setTheme(\"ace/theme/monokai-light\");\n                    editor.session.setMode(\"ace/mode/python\");\n                    editor.setOptions({\n                        fontSize: \"18px\"\n                    });\n\n                    // Установка содержимого редактора из скрытого поля\n                    var initialCode = $('#answer-field').val();\n                    if (initialCode) {\n                        editor.setValue(initialCode, -1);\n                    }\n\n                    // Синхронизация содержимого редактора с скрытым полем\n                    editor.getSession().on('change', function(){\n                        var code = editor.getValue();\n                        $('#answer-field').val(code);\n                    });\n\n                    // Загрузка истории вердиктов из Local Storage и отображение\n                    loadVerdictHistory();\n\n                    // Добавляем обработчик beforeunload для предупреждения о несохраненных изменениях\n                    window.onbeforeunload = function (e) {\n                        return 'Вы уверены, что хотите покинуть страницу? Несохраненные изменения будут потеряны.';\n                    };\n\n                    $('#language-select').change(function () {\n                        var language = $(this).val();\n                        switch (language) {\n                            case 'python':\n                                editor.session.setMode(\"ace/mode/python\");\n                                break;\n                            case 'cpp':\n                                editor.session.setMode(\"ace/mode/c_cpp\");\n                                break;\n                            case 'java':\n                                editor.session.setMode(\"ace/mode/java\");\n                                break;\n                            case 'csharp':\n                                editor.session.setMode(\"ace/mode/csharp\");\n                                break;\n                        }\n                    });\n\n                    $('#file-upload').after('<button type=\"button\" id=\"remove-file\" class=\"btn btn-danger ml-2\">Удалить файл</button>');\n\n                    // Обработчик для удаления файла\n                    $('#remove-file').click(function () {\n                        $('#file-upload').val(null);\n                        window.onbeforeunload = null;\n                    });\n\n                    $('#submit-button').click(function () {\n                        // Удаляем обработчик событий на уход со страницы\n                        window.onbeforeunload = null;\n\n                        let answer = editor.getValue();\n                        let language = $('#language-select').val();\n                        let extension;\n                        let commentPrefix;\n\n                        // Определение расширения файла и префикса комментария\n                        switch (language) {\n                            case 'python':\n                                extension = '.py';\n                                commentPrefix = '#';\n                                break;\n                            case 'cpp':\n                            case 'java':\n                            case 'csharp':\n                                extension = language === 'cpp' ? '.cpp' : (language === 'java' ? '.java' : '.cs');\n                                commentPrefix = '//';\n                                break;\n                        }\n\n                        // Генерация случайного числа и добавление его в качестве комментария\n                        let randomNumber = Math.floor(Math.random() * 1000000);\n                        let randomComment = `${commentPrefix} Random number: ${randomNumber}\\n`;\n                        answer = randomComment + answer;\n\n                        let contestid = params.contestid;\n                        let fileInput = $('#file-upload')[0];\n                        let formData = new FormData();\n\n                        if (fileInput.files.length > 0) {\n                            // Если файл загружен, добавляем комментарий к содержимому файла\n                            let file = fileInput.files[0];\n                            let reader = new FileReader();\n                            reader.onload = function (e) {\n                                let content = e.target.result;\n                                let modifiedContent = randomComment + content;\n                                formData.append('file', new Blob([modifiedContent], {type: 'text/plain'}), 'main' + extension);\n                                sendRequest(formData, language, contestid, answer);\n                            };\n                            reader.readAsText(file);\n                        } else {\n                            // Если файл не загружен, используем текст из редактора\n                            formData.append('code', answer);\n                            formData.append('extension', extension);\n                            sendRequest(formData, language, contestid, answer);\n                        }\n                    });\n\n                    function sendRequest(formData, language, contestid, answer) {\n                        formData.append('compiler', language === 'python' ? 'python3' : (language === 'cpp' ? 'gcc_cpp20' : (language === 'java' ? 'javac' : 'mcs')));\n                        formData.append('problem', params.submissionid); // Используем submissionid из настроек\n\n                        const myHeaders = new Headers();\n                        myHeaders.append(\"Authorization\", \"OAuth y0_AgAEA7qkKGeUAAv6MwAAAAEIAX7dAABWL6qZvrJOUJvQhMBpgC27VCKHrg\");\n\n                        const requestOptions = {\n                            method: \"POST\",\n                            headers: myHeaders,\n                            body: formData,\n                            redirect: \"follow\"\n                        };\n\n                        fetch(`http://185.4.67.138:3002/api/contests/${contestid}/submissions`, requestOptions)\n                            .then(response => response.json())\n                            .then(result => {\n                                log.debug(result);\n\n                                // Получение вердикта из ответа\n                                let verdict = result.verdict || (result.status === 'OK' ? 'OK' : 'Error');\n\n                                // Добавление вердикта в историю и отображение\n                                addVerdictToHistory(verdict);\n\n                                // Отправка результата на сервер Moodle для оценки\n                                $.ajax({\n                                    url: M.cfg.wwwroot + '/question/type/yconrunner/grade_response.php',\n                                    method: 'POST',\n                                    contentType: 'application/json',\n                                    data: JSON.stringify({\n                                        result: verdict === 'OK' ? 1 : 0,\n                                        attemptid: attemptid, // Используем attemptid\n                                        verdict: verdict // Передаём verdict\n                                    }),\n                                    success: function (response) {\n                                        log.debug('Оценка успешно сохранена', response);\n                                        $('#file-upload').val(null); // Удаление файла из прикрепления\n\n                                        // Сообщаем Moodle, что форма была отправлена\n                                        var form = document.getElementById('responseform');\n                                        if (form && M && M.core_formchangechecker) {\n                                            M.core_formchangechecker.set_form_submitted();\n                                        }\n\n                                        // Удаляем обработчик события beforeunload\n                                        window.onbeforeunload = null;\n\n                                        // Предотвращаем срабатывание других обработчиков beforeunload\n                                        window.addEventListener('beforeunload', function(e) {\n                                            e.stopImmediatePropagation();\n                                        }, true);\n\n                                        // Перезагружаем страницу\n                                        window.location.reload();\n                                    },\n                                    error: function (error) {\n                                        log.error('Ошибка при сохранении оценки:', error);\n                                        $('#file-upload').val(null);\n\n                                        // Аналогичные действия\n                                        var form = document.getElementById('responseform');\n                                        if (form && M && M.core_formchangechecker) {\n                                            M.core_formchangechecker.set_form_submitted();\n                                        }\n\n                                        window.onbeforeunload = null;\n                                        window.addEventListener('beforeunload', function(e) {\n                                            e.stopImmediatePropagation();\n                                        }, true);\n\n                                        window.location.reload();\n                                    }\n                                });\n                            })\n                            .catch(error => {\n                                log.debug(error);\n                                $('#result-message').text('Произошла ошибка при отправке решения.').show();\n\n                                // Отправка результата на сервер Moodle для оценки с результатом 0\n                                $.ajax({\n                                    url: M.cfg.wwwroot + '/question/type/yconrunner/grade_response.php',\n                                    method: 'POST',\n                                    contentType: 'application/json',\n                                    data: JSON.stringify({result: 0, attemptid: attemptid}),\n                                    success: function (response) {\n                                        log.debug('Оценка успешно сохранена', response);\n                                        $('#file-upload').val(null);\n\n                                        var form = document.getElementById('responseform');\n                                        if (form && M && M.core_formchangechecker) {\n                                            M.core_formchangechecker.set_form_submitted();\n                                        }\n\n                                        window.onbeforeunload = null;\n                                        window.addEventListener('beforeunload', function(e) {\n                                            e.stopImmediatePropagation();\n                                        }, true);\n\n                                        window.location.reload();\n                                    },\n                                    error: function (error) {\n                                        log.error('Ошибка при сохранении оценки:', error);\n                                        $('#file-upload').val(null);\n\n                                        var form = document.getElementById('responseform');\n                                        if (form && M && M.core_formchangechecker) {\n                                            M.core_formchangechecker.set_form_submitted();\n                                        }\n\n                                        window.onbeforeunload = null;\n                                        window.addEventListener('beforeunload', function(e) {\n                                            e.stopImmediatePropagation();\n                                        }, true);\n\n                                        window.location.reload();\n                                    }\n                                });\n                            });\n                    }\n\n                    // Функция для загрузки истории вердиктов из Local Storage и отображения\n                    function loadVerdictHistory() {\n                        let key = `yconrunner_verdicts_${attemptid}`; // Уникальный ключ для текущей попытки\n                        let verdicts = JSON.parse(localStorage.getItem(key)) || [];\n                        let $historyList = $('#verdict-history');\n\n                        $historyList.empty(); // Очистка списка перед загрузкой\n\n                        verdicts.forEach(function(verdict) {\n                            let alertClass = (verdict === 'OK') ? 'alert-success' : 'alert-danger';\n                            let $item = $('<li>')\n                                .addClass(`list-group-item list-group-item-${alertClass}`)\n                                .text(verdict);\n                            $historyList.append($item);\n                        });\n                    }\n\n                    // Функция для добавления нового вердикта в историю\n                    function addVerdictToHistory(verdict) {\n                        let key = `yconrunner_verdicts_${attemptid}`; // Уникальный ключ для текущей попытки\n                        let verdicts = JSON.parse(localStorage.getItem(key)) || [];\n                        verdicts.unshift(verdict); // Добавляем новый вердикт в начало массива\n\n                        if (verdicts.length > 3) {\n                            verdicts.pop(); // Удаляем самый старый вердикт, если длина превышает 3\n                        }\n\n                        localStorage.setItem(key, JSON.stringify(verdicts));\n                        loadVerdictHistory(); // Обновляем отображение истории\n                    }\n\n                });\n            }\n        );}};});"],"names":["define","$","log","acePromise","init","params","document","ready","attemptid","querySelectorAll","forEach","question","verifyButton","querySelector","textContent","trim","checkButton","style","display","fetch","contestid","submissionid","then","response","text","data","debug","html","catch","error","ace","editor","edit","setTheme","session","setMode","setOptions","fontSize","initialCode","val","sendRequest","formData","language","answer","append","myHeaders","Headers","method","headers","body","redirect","json","result","verdict","status","key","verdicts","JSON","parse","localStorage","getItem","unshift","length","pop","setItem","stringify","loadVerdictHistory","addVerdictToHistory","ajax","url","M","cfg","wwwroot","contentType","success","getElementById","core_formchangechecker","set_form_submitted","window","onbeforeunload","addEventListener","e","stopImmediatePropagation","location","reload","show","$historyList","empty","alertClass","$item","addClass","setValue","getSession","on","code","getValue","change","this","after","click","extension","commentPrefix","randomComment","Math","floor","random","fileInput","FormData","files","file","reader","FileReader","onload","content","target","modifiedContent","Blob","type","readAsText"],"mappings":"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"}